


ARM Macro Assembler    Page 1 


    1 00000000         ;#include <k_config.h>
    2 00000000         
    3 00000000         ;*******************************************************
                       ***********************
    4 00000000         ;                            EXTERN PARAMETERS
    5 00000000         ;*******************************************************
                       ***********************
    6 00000000                 EXTERN           g_active_task
    7 00000000                 EXTERN           g_preferred_ready_task
    8 00000000                 EXTERN           krhino_stack_ovf_check
    9 00000000                 EXTERN           krhino_task_sched_stats_get
   10 00000000         
   11 00000000         ;*******************************************************
                       ***********************
   12 00000000         ;                            EXPORT FUNCTIONS
   13 00000000         ;*******************************************************
                       ***********************
   14 00000000                 EXPORT           cpu_intrpt_save
   15 00000000                 EXPORT           cpu_intrpt_restore
   16 00000000                 EXPORT           cpu_task_switch
   17 00000000                 EXPORT           cpu_intrpt_switch
   18 00000000                 EXPORT           cpu_first_task_start
   19 00000000         
   20 00000000                 EXPORT           PendSV_Handler
   21 00000000                 EXPORT           _first_task_restore
   22 00000000         
   23 00000000         ;*******************************************************
                       ***********************
   24 00000000         ;                                 EQUATES
   25 00000000         ;*******************************************************
                       ***********************
   26 00000000 E000ED04 
                       SCB_ICSR
                               EQU              0xE000ED04  ; Interrupt Control
                                                             and State Register
                                                            .
   27 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08  ; Vector Table Offs
                                                            et Register.
   28 00000000 10000000 
                       ICSR_PENDSVSET
                               EQU              0x10000000  ; Value to trigger 
                                                            PendSV exception.
   29 00000000         
   30 00000000 E000ED22 
                       SHPR3_PRI_14
                               EQU              0xE000ED22  ; System Handler Pr
                                                            iority Register 3 (
                                                            PendSV).
   31 00000000 000000FF 
                       PRI_LVL_PENDSV
                               EQU              0xFF        ; PendSV priority l
                                                            evel (lowest).
   32 00000000 E000ED23 
                       SHPR3_PRI_15
                               EQU              0xE000ED23  ; System Handler Pr
                                                            iority Register 3 (
                                                            SysTick).



ARM Macro Assembler    Page 2 


   33 00000000 000000FF 
                       PRI_LVL_SYSTICK
                               EQU              0xFF        ; SYstick priority 
                                                            level (lowest).
   34 00000000         
   35 00000000         ;*******************************************************
                       ***********************
   36 00000000         ;                        CODE GENERATION DIRECTIVES
   37 00000000         ;*******************************************************
                       ***********************
   38 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   39 00000000                 THUMB
   40 00000000                 REQUIRE8
   41 00000000                 PRESERVE8
   42 00000000         
   43 00000000         ;*******************************************************
                       ***********************
   44 00000000         ; Functions:
   45 00000000         ;     size_t cpu_intrpt_save(void);
   46 00000000         ;     void cpu_intrpt_restore(size_t cpsr);
   47 00000000         ;*******************************************************
                       ***********************
   48 00000000         cpu_intrpt_save
   49 00000000 F3EF 8010       MRS              R0, PRIMASK
   50 00000004 B672            CPSID            I
   51 00000006 4770            BX               LR
   52 00000008         
   53 00000008         cpu_intrpt_restore
   54 00000008 F380 8810       MSR              PRIMASK, R0
   55 0000000C 4770            BX               LR
   56 0000000E         
   57 0000000E         ;*******************************************************
                       ***********************
   58 0000000E         ; Functions:
   59 0000000E         ;     void cpu_intrpt_switch(void);
   60 0000000E         ;     void cpu_task_switch(void);
   61 0000000E         ;*******************************************************
                       ***********************
   62 0000000E         cpu_task_switch
   63 0000000E 4822            LDR              R0, =SCB_ICSR
   64 00000010 F04F 5180       LDR              R1, =ICSR_PENDSVSET
   65 00000014 6001            STR              R1, [R0]
   66 00000016 4770            BX               LR
   67 00000018         
   68 00000018         cpu_intrpt_switch
   69 00000018 481F            LDR              R0, =SCB_ICSR
   70 0000001A F04F 5180       LDR              R1, =ICSR_PENDSVSET
   71 0000001E 6001            STR              R1, [R0]
   72 00000020 4770            BX               LR
   73 00000022         
   74 00000022         ;*******************************************************
                       ***********************
   75 00000022         ; Functions:
   76 00000022         ;     void cpu_first_task_start(void);
   77 00000022         ;*******************************************************
                       ***********************
   78 00000022         cpu_first_task_start
   79 00000022         ;set PendSV prority to the lowest



ARM Macro Assembler    Page 3 


   80 00000022 481E            LDR              R0, =SHPR3_PRI_14
   81 00000024 F04F 01FF       LDR              R1, =PRI_LVL_PENDSV
   82 00000028 7001            STRB             R1, [R0]
   83 0000002A         
   84 0000002A         ;set Systick prority to the lowest
   85 0000002A 481D            LDR              R0, =SHPR3_PRI_15
   86 0000002C F04F 01FF       LDR              R1, =PRI_LVL_SYSTICK
   87 00000030 7001            STRB             R1, [R0]
   88 00000032         
   89 00000032         ;indicate PendSV_Handler branch to _pendsv_handler_nosav
                       e
   90 00000032 2000            MOVS             R0, #0
   91 00000034 F380 8809       MSR              PSP, R0
   92 00000038         
   93 00000038         ;make PendSV exception pending
   94 00000038 4817            LDR              R0, =SCB_ICSR
   95 0000003A F04F 5180       LDR              R1, =ICSR_PENDSVSET
   96 0000003E 6001            STR              R1, [R0]
   97 00000040         
   98 00000040         ;goto PendSV_Handler
   99 00000040 B662            CPSIE            I
  100 00000042 E7FE            B                .
  101 00000044         
  102 00000044         ;*******************************************************
                       ***********************
  103 00000044         ; Functions:
  104 00000044         ;     void krhino_pendsv_handler(void);
  105 00000044         ;*******************************************************
                       ***********************
  106 00000044         PendSV_Handler
  107 00000044 B672            CPSID            I
  108 00000046 F3EF 8009       MRS              R0, PSP
  109 0000004A         ;branch if cpu_first_task_start
  110 0000004A 2800            CMP              R0, #0
  111 0000004C D0FE            BEQ              _first_task_restore
  112 0000004E         
  113 0000004E         ;hardware saved R0~R3,R12,LR,PC,xPSR
  114 0000004E         
  115 0000004E         ;save context
  116 0000004E                 IF               {FPU} != "SoftVFP"
  117 0000004E         ;if the switchout task use FPU, save the FPU regs
  118 0000004E F01E 0F10       TST              LR, #0x10
  119 00000052 BF08            IT               EQ
  120 00000054 ED20 8B10       VSTMFDEQ         R0!, {D8 - D15}
  121 00000058         ;hardware saved D0~D7, FPSCR
  122 00000058                 ENDIF
  123 00000058         
  124 00000058 3824            SUBS             R0, R0, #0x24
  125 0000005A E880 4FF0       STM              R0, {R4-R11, LR}
  126 0000005E         
  127 0000005E         ;g_active_task->task_stack = context region
  128 0000005E 4911            LDR              R1, =g_active_task
  129 00000060 6809            LDR              R1, [R1]
  130 00000062 6008            STR              R0, [R1]
  131 00000064         
  132 00000064         ;#if (RHINO_CONFIG_TASK_STACK_OVF_CHECK > 0)
  133 00000064 F7FF FFFE       BL               krhino_stack_ovf_check
  134 00000068         ;#endif
  135 00000068         ;#if (RHINO_CONFIG_SYS_STATS > 0)



ARM Macro Assembler    Page 4 


  136 00000068         ;    BL      krhino_task_sched_stats_get
  137 00000068         ;#endif
  138 00000068         
  139 00000068         _pendsv_handler_nosave
  140 00000068 480E            LDR              R0, =g_active_task
  141 0000006A 490F            LDR              R1, =g_preferred_ready_task
  142 0000006C 680A            LDR              R2, [R1]
  143 0000006E 6002            STR              R2, [R0]
  144 00000070         ;R0 = g_active_task->task_stack = context region
  145 00000070 6810            LDR              R0, [R2]
  146 00000072         
  147 00000072         ;restore context
  148 00000072 E890 4FF0       LDM              R0, {R4-R11, LR}
  149 00000076 3024            ADDS             R0, R0, #0x24
  150 00000078         
  151 00000078                 IF               {FPU} != "SoftVFP"
  152 00000078         ;if the switchin task use FPU, save the FPU regs
  153 00000078 F01E 0F10       TST              LR, #0x10
  154 0000007C BF08            IT               EQ
  155 0000007E ECB0 8B10       VLDMFDEQ         R0!, {D8 - D15}
  156 00000082         ;hardware will restore D0~D7, FPSCR
  157 00000082                 ENDIF
  158 00000082         
  159 00000082         ;return stack = PSP
  160 00000082 F380 8809       MSR              PSP, R0
  161 00000086         
  162 00000086 B662            CPSIE            I
  163 00000088         ;hardware restore R0~R3,R12,LR,PC,xPSR
  164 00000088 4770            BX               LR
  165 0000008A         
  166 0000008A         _first_task_restore
  167 0000008A         ;set MSP to the base of system stack
  168 0000008A 4808            LDR              R0, =SCB_VTOR
  169 0000008C 6800            LDR              R0, [R0]
  170 0000008E 6800            LDR              R0, [R0]
  171 00000090 F380 8808       MSR              MSP, R0
  172 00000094         
  173 00000094 E7E8            B                _pendsv_handler_nosave
  174 00000096         
  175 00000096 00 00           ALIGN
  176 00000098                 END
              E000ED04 
              E000ED22 
              E000ED23 
              00000000 
              00000000 
              E000ED08 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\port_s.d -o.\objects\port_s.o -I.\RTE\_AliOS_Example 
-IC:\Users\User\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:
\Users\User\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\DSP\Include -IC:\User
s\User\AppData\Local\Arm\Packs\HDSC\HC32F46x\1.0.0\Device\Include --predefine="
__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ 
SETA 1" --list=.\listings\port_s.lst ..\Port\port_s.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 38 in file ..\Port\port_s.S
   Uses
      None
Comment: .text unused
PendSV_Handler 00000044

Symbol: PendSV_Handler
   Definitions
      At line 106 in file ..\Port\port_s.S
   Uses
      At line 20 in file ..\Port\port_s.S
Comment: PendSV_Handler used once
_first_task_restore 0000008A

Symbol: _first_task_restore
   Definitions
      At line 166 in file ..\Port\port_s.S
   Uses
      At line 21 in file ..\Port\port_s.S
      At line 111 in file ..\Port\port_s.S

_pendsv_handler_nosave 00000068

Symbol: _pendsv_handler_nosave
   Definitions
      At line 139 in file ..\Port\port_s.S
   Uses
      At line 173 in file ..\Port\port_s.S
Comment: _pendsv_handler_nosave used once
cpu_first_task_start 00000022

Symbol: cpu_first_task_start
   Definitions
      At line 78 in file ..\Port\port_s.S
   Uses
      At line 18 in file ..\Port\port_s.S
Comment: cpu_first_task_start used once
cpu_intrpt_restore 00000008

Symbol: cpu_intrpt_restore
   Definitions
      At line 53 in file ..\Port\port_s.S
   Uses
      At line 15 in file ..\Port\port_s.S
Comment: cpu_intrpt_restore used once
cpu_intrpt_save 00000000

Symbol: cpu_intrpt_save
   Definitions
      At line 48 in file ..\Port\port_s.S
   Uses
      At line 14 in file ..\Port\port_s.S
Comment: cpu_intrpt_save used once
cpu_intrpt_switch 00000018




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: cpu_intrpt_switch
   Definitions
      At line 68 in file ..\Port\port_s.S
   Uses
      At line 17 in file ..\Port\port_s.S
Comment: cpu_intrpt_switch used once
cpu_task_switch 0000000E

Symbol: cpu_task_switch
   Definitions
      At line 62 in file ..\Port\port_s.S
   Uses
      At line 16 in file ..\Port\port_s.S
Comment: cpu_task_switch used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ICSR_PENDSVSET 10000000

Symbol: ICSR_PENDSVSET
   Definitions
      At line 28 in file ..\Port\port_s.S
   Uses
      At line 64 in file ..\Port\port_s.S
      At line 70 in file ..\Port\port_s.S
      At line 95 in file ..\Port\port_s.S

PRI_LVL_PENDSV 000000FF

Symbol: PRI_LVL_PENDSV
   Definitions
      At line 31 in file ..\Port\port_s.S
   Uses
      At line 81 in file ..\Port\port_s.S
Comment: PRI_LVL_PENDSV used once
PRI_LVL_SYSTICK 000000FF

Symbol: PRI_LVL_SYSTICK
   Definitions
      At line 33 in file ..\Port\port_s.S
   Uses
      At line 86 in file ..\Port\port_s.S
Comment: PRI_LVL_SYSTICK used once
SCB_ICSR E000ED04

Symbol: SCB_ICSR
   Definitions
      At line 26 in file ..\Port\port_s.S
   Uses
      At line 63 in file ..\Port\port_s.S
      At line 69 in file ..\Port\port_s.S
      At line 94 in file ..\Port\port_s.S

SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 27 in file ..\Port\port_s.S
   Uses
      At line 168 in file ..\Port\port_s.S
Comment: SCB_VTOR used once
SHPR3_PRI_14 E000ED22

Symbol: SHPR3_PRI_14
   Definitions
      At line 30 in file ..\Port\port_s.S
   Uses
      At line 80 in file ..\Port\port_s.S
Comment: SHPR3_PRI_14 used once
SHPR3_PRI_15 E000ED23

Symbol: SHPR3_PRI_15
   Definitions
      At line 32 in file ..\Port\port_s.S
   Uses
      At line 85 in file ..\Port\port_s.S



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: SHPR3_PRI_15 used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

g_active_task 00000000

Symbol: g_active_task
   Definitions
      At line 6 in file ..\Port\port_s.S
   Uses
      At line 128 in file ..\Port\port_s.S
      At line 140 in file ..\Port\port_s.S

g_preferred_ready_task 00000000

Symbol: g_preferred_ready_task
   Definitions
      At line 7 in file ..\Port\port_s.S
   Uses
      At line 141 in file ..\Port\port_s.S
Comment: g_preferred_ready_task used once
krhino_stack_ovf_check 00000000

Symbol: krhino_stack_ovf_check
   Definitions
      At line 8 in file ..\Port\port_s.S
   Uses
      At line 133 in file ..\Port\port_s.S
Comment: krhino_stack_ovf_check used once
krhino_task_sched_stats_get 00000000

Symbol: krhino_task_sched_stats_get
   Definitions
      At line 9 in file ..\Port\port_s.S
   Uses
      None
Comment: krhino_task_sched_stats_get unused
4 symbols
356 symbols in table
